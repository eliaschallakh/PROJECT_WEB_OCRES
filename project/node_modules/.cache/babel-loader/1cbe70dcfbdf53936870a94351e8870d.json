{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Unknow\\\\Desktop\\\\Football\\\\project\\\\src\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport PointsTable from \"./PointsTable\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Table, Form } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Admin() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [matchs, setMatchs] = useState([]);\n  const [description, setDescription] = useState([]);\n  const [date, setDate] = useState([]);\n\n  function inputUpdate(event) {\n    setMatchs({\n      [event.target.name]: event.target.value\n    });\n    setDescription({\n      [event.target.name]: event.target.value\n    });\n    setDate({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  ;\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await Axios.get('http://localhost:5000/comments/', {});\n      setData(response.data);\n      console.log(response.data);\n      var matchess = [];\n      var descriptionss = [];\n      var datess = [];\n\n      for (var i = 0; i < response.data.length; i++) {\n        matchess.push(response.data[i].matchs);\n        descriptionss.push(response.data[i].description);\n        var today = new Date(response.data[i].date);\n        datess.push(today.toISOString().substring(0, 10));\n      }\n\n      setMatchs(matchess);\n      setDescription(descriptionss);\n      setDate(datess);\n    };\n\n    fetchData();\n  }, []);\n\n  function updateComment(_id) {\n    const commentUpdate = async (_id, matchs, description, date) => {\n      const response = await Axios.put('http://localhost:5000/comments/update', {\n        matchs: matchs,\n        description: description,\n        date: date\n      });\n    };\n\n    var matchs = document.getElementsByClassName(\"matchs\" + _id)[0].value;\n    var description = document.getElementsByClassName(\"description\" + _id)[0].value;\n    var date = document.getElementsByClassName(\"date\" + _id)[0].value;\n    updateAlert(_id, matchs, description, date);\n    window.location.reload(false);\n    alert(\"update\");\n  }\n\n  function deleteComment(_id) {\n    const commentdelete = async _id => {\n      const response = await axios.delete(`http://localhost:5000/comments/delete/${id}`);\n    };\n  }\n\n  if (data === undefined || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"livescore\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Live comments !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          style: {\n            marginBottom: \"100%\"\n          },\n          className: \"commentWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"flex messages\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Matchs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: data.map((comment, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"  \", /*#__PURE__*/_jsxDEV(Form.Control, {\n                      onChange: inputUpdate,\n                      value: matchs[i],\n                      name: \"matchs\" + i,\n                      className: \"matchs\" + comment._id,\n                      type: \"text\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Form.Control, {\n                      onChange: inputUpdate,\n                      value: description[i],\n                      className: \"description\" + comment._id,\n                      type: \"text\",\n                      name: \"description\" + i\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 38\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"  \", /*#__PURE__*/_jsxDEV(Form.Control, {\n                      onChange: inputUpdate,\n                      value: date[i],\n                      className: \"date\" + comment._id,\n                      type: \"date\",\n                      name: \"date\" + i\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => updateComment(comment._id),\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => deleteComment(comment._id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 32\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Admin, \"aCFBli3W5fNAKk9M+Be0fDjFYLQ=\");\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/Users/Unknow/Desktop/Football/project/src/Admin.js"],"names":["PointsTable","React","useState","useEffect","Table","Form","Axios","Admin","data","setData","matchs","setMatchs","description","setDescription","date","setDate","inputUpdate","event","target","name","value","fetchData","response","get","console","log","matchess","descriptionss","datess","i","length","push","today","Date","toISOString","substring","updateComment","_id","commentUpdate","put","document","getElementsByClassName","updateAlert","window","location","reload","alert","deleteComment","commentdelete","axios","delete","id","undefined","textAlign","marginBottom","map","comment"],"mappings":"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","sourcesContent":["import PointsTable from \"./PointsTable\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport  {Table,Form} from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\nexport default function Admin() {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n     const [matchs, setMatchs] = useState([]);\r\n    const [description, setDescription] = useState([]);\r\n    const [date, setDate] = useState([]);\r\n    \r\n    \r\n    function inputUpdate(event) \r\n    {\r\n        setMatchs({[event.target.name]: event.target.value});\r\n        setDescription({[event.target.name]: event.target.value});\r\n        setDate({[event.target.name]: event.target.value});\r\n\r\n\r\n      };\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await Axios.get('http://localhost:5000/comments/', {  \r\n            });\r\n             setData(response.data);\r\n             console.log(response.data);\r\n            \r\n             var matchess=[];\r\n             var descriptionss=[];\r\n             var datess=[];\r\n          \r\n            for (var i=0; i<response.data.length; i++)\r\n            {\r\n                matchess.push((response.data[i].matchs));\r\n                descriptionss.push((response.data[i].description));\r\n\r\n                var today = new Date(response.data[i].date);\r\n                datess.push(today.toISOString().substring(0, 10));\r\n            }\r\n            \r\n                setMatchs(matchess);\r\n                setDescription(descriptionss);\r\n                setDate(datess);\r\n\r\n          };\r\n          fetchData();\r\n        }, []);\r\n\r\n       function updateComment(_id)\r\n       {\r\n        \r\n    \r\n        \r\n        const commentUpdate = async (_id,matchs,description,date) => {\r\n        \r\n            const response = await Axios.put('http://localhost:5000/comments/update', {  \r\n                matchs :matchs,\r\n                description : description,\r\n                date : date,\r\n            }\r\n\r\n            )\r\n          };\r\n\r\n        var matchs = document.getElementsByClassName(\"matchs\"+_id)[0].value;\r\n        var description = document.getElementsByClassName(\"description\"+_id)[0].value;\r\n        var date = document.getElementsByClassName(\"date\"+_id)[0].value;\r\n      \r\n          updateAlert(_id,matchs,description,date);\r\n \r\n         window.location.reload(false);  \r\n         alert(\"update\");\r\n\r\n\r\n       }\r\n\r\n       function deleteComment(_id)\r\n       {\r\n\r\n            const commentdelete = async (_id) => {\r\n            \r\n                const response = await axios.delete(`http://localhost:5000/comments/delete/${id}`)  \r\n                };\r\n\r\n\r\n       }\r\n\r\n\r\n\r\n\r\n    if (data===undefined ||data.length===0)\r\n    {\r\n\r\n        return <div>....</div>;\r\n\r\n    }\r\nelse{\r\n    return (\r\n        <div className=\"livescore\">\r\n                         <div>\r\n                <h3 style={{textAlign: \"center\"}} >Live comments !</h3>\r\n              \r\n              <div style={{textAlign: \"center\"}} style={{marginBottom: \"100%\"}}className=\"commentWrapper\">\r\n                    \r\n                    <div  class=\"flex messages\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Matchs</th>\r\n                                    <th>Description</th>\r\n                                    <th>Date</th>\r\n                                    <th>Edit</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {  \r\n                        data.map((comment, i) => (\r\n\r\n                               <tr>\r\n                                <td>  <Form.Control onChange={inputUpdate} value={matchs[i]}  name={\"matchs\"+i} className={\"matchs\"+comment._id} type=\"text\"/></td>\r\n                                <td> <Form.Control onChange={inputUpdate} value={description[i]} className={\"description\"+comment._id} type=\"text\" name={\"description\"+i} /></td>\r\n                                <td>  <Form.Control onChange={inputUpdate} value={date[i]} className={\"date\"+comment._id} type=\"date\" name={\"date\"+i} /></td>\r\n                                    <td>\r\n                                        <button  onClick={() => updateComment(comment._id)} >Update</button>\r\n                                        <button onClick={() => deleteComment(comment._id)}>Delete</button>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                                       ))\r\n\r\n                               \r\n                               }\r\n                            </tbody>\r\n                        </Table>\r\n                   \r\n\r\n                    </div>\r\n              </div>\r\n              \r\n              </div>\r\n        </div>\r\n    );\r\n                            }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}