{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Unknow\\\\Desktop\\\\Football\\\\project\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport PointsTable from \"./PointsTable\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Graph from \"./Graph\";\nimport Venues from \"./Venues\";\nimport LiveScore from \"./LiveScore\";\nimport { getStanding, getplayers, getvenue, getMatches, getLive, getOdds, getSingleMatchOdds } from \"./Redux/action\";\nimport { connect } from \"react-redux\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home(_ref) {\n  _s();\n\n  let {\n    getStanding,\n    getplayers,\n    getvenue,\n    getMatches,\n    getLive,\n    getOdds,\n    getSingleMatchOdds,\n    topPlayers,\n    ranking,\n    venues,\n    matches,\n    live,\n    all,\n    preMatchOdds,\n    inPlayOdds\n  } = _ref;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getStanding();\n    getplayers();\n    getvenue();\n    getMatches();\n    getLive();\n    getOdds();\n\n    const fetchData = async () => {\n      const response = await Axios.get('http://localhost:5000/comments/', {}).catch(error => console.log(error.resp));\n      setData(response);\n    };\n\n    fetchData();\n    console.log(data);\n  }, []);\n  console.log(data);\n\n  if (data === undefined) {\n    console.log(\"jsuis nul\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 20\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"livescore\",\n      children: [/*#__PURE__*/_jsxDEV(LiveScore, {\n        liveScore: live,\n        preMatchOdds: preMatchOdds,\n        inPlayOdds: inPlayOdds,\n        getSingleMatchOdds: getSingleMatchOdds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        topPlayers: topPlayers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Live comments !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          className: \"commentWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"flex messages\",\n            children: data.data.map((comment, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messageContent\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"left\"\n                },\n                className: \"match\",\n                children: [\"Match : \", comment.matchs]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"left\"\n                },\n                className: \"description\",\n                children: comment.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: comment.date.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PointsTable, {\n          ranking: ranking,\n          matches: matches,\n          allMatches: all,\n          getSingleMatchOdds: getSingleMatchOdds,\n          preMatchOdds: preMatchOdds,\n          inPlayOdds: inPlayOdds,\n          venues: venues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Home, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Home;\n\nconst mapStateToProps = state => ({\n  ranking: state.football.listStandings,\n  topPlayers: state.football.listTopPlayers,\n  venues: state.football.listVenues,\n  matches: state.football.listMatches,\n  live: state.football.listLiveMatches,\n  all: state.football.ListAllMatches,\n  preMatchOdds: state.football.prematchOdds,\n  inPlayOdds: state.football.inPlayOdds\n});\n\nexport default connect(mapStateToProps, {\n  getStanding,\n  getplayers,\n  getvenue,\n  getMatches,\n  getLive,\n  getOdds,\n  getSingleMatchOdds\n})(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Unknow/Desktop/Football/project/src/Home.js"],"names":["PointsTable","React","useState","useEffect","Graph","Venues","LiveScore","getStanding","getplayers","getvenue","getMatches","getLive","getOdds","getSingleMatchOdds","connect","Axios","Home","topPlayers","ranking","venues","matches","live","all","preMatchOdds","inPlayOdds","data","setData","fetchData","response","get","catch","error","console","log","resp","undefined","textAlign","map","comment","i","matchs","description","date","toString","mapStateToProps","state","football","listStandings","listTopPlayers","listVenues","listMatches","listLiveMatches","ListAllMatches","prematchOdds"],"mappings":"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","sourcesContent":["import PointsTable from \"./PointsTable\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport Graph from \"./Graph\";\r\nimport Venues from \"./Venues\";\r\nimport LiveScore from \"./LiveScore\";\r\nimport {getStanding, getplayers, getvenue, getMatches, getLive, getOdds, getSingleMatchOdds} from \"./Redux/action\";\r\nimport {connect} from \"react-redux\";\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nfunction Home({\r\n                  getStanding,\r\n                  getplayers,\r\n                  getvenue,\r\n                  getMatches,\r\n                  getLive,\r\n                  getOdds,\r\n                  getSingleMatchOdds,\r\n                  topPlayers,\r\n                  ranking,\r\n                  venues,\r\n                  matches,\r\n                  live,\r\n                  all,\r\n                  preMatchOdds,\r\n                  inPlayOdds\r\n              }) {\r\n        \r\n   const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        getStanding();\r\n        getplayers();\r\n        getvenue();\r\n        getMatches();\r\n        getLive();\r\n        getOdds();\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await Axios.get('http://localhost:5000/comments/', {  \r\n            })\r\n            .catch((error) => console.log(error.resp));\r\n             setData(response);\r\n          };\r\n\r\n          fetchData();\r\n          console.log(data);\r\n\r\n    }, []);\r\n        console.log(data);\r\n        \r\n        if (data===undefined)\r\n        {\r\n                console.log(\"jsuis nul\")\r\n            return <div>....</div>;\r\n\r\n        }\r\n   else{\r\n\r\n\r\n        return (\r\n        <div className=\"livescore\">\r\n         \r\n            <LiveScore liveScore={live} preMatchOdds={preMatchOdds} inPlayOdds={inPlayOdds}\r\n                       getSingleMatchOdds={getSingleMatchOdds}/>\r\n            <Graph topPlayers={topPlayers}/>\r\n            \r\n             <div>\r\n                <h3 style={{textAlign: \"center\"}} >Live comments !</h3>\r\n              \r\n              <div style={{textAlign: \"center\"}} className=\"commentWrapper\">\r\n                    \r\n                    <div  class=\"flex messages\">\r\n                            \r\n                        {\r\n                        \r\n                        data.data.map((comment, i) => (\r\n                            <div className=\"messageContent\">\r\n                                <div style={{textAlign: \"left\"}} className='match'>Match : {comment.matchs}</div>\r\n                                <div style={{textAlign: \"left\"}} className='description'>\r\n                                     {comment.description}\r\n                                </div>\r\n                                <div style={{textAlign: \"right\"}}>{comment.date.toString()}</div>\r\n                            </div>\r\n                                       ))\r\n                       }\r\n\r\n                    </div>\r\n              </div>\r\n              \r\n              </div>\r\n\r\n            <div>\r\n                <PointsTable ranking={ranking} matches={matches} allMatches={all}\r\n                             getSingleMatchOdds={getSingleMatchOdds} preMatchOdds={preMatchOdds}\r\n                             inPlayOdds={inPlayOdds} venues={venues}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ranking: state.football.listStandings,\r\n    topPlayers: state.football.listTopPlayers,\r\n    venues: state.football.listVenues,\r\n    matches: state.football.listMatches,\r\n    live: state.football.listLiveMatches,\r\n    all: state.football.ListAllMatches,\r\n    preMatchOdds: state.football.prematchOdds,\r\n    inPlayOdds: state.football.inPlayOdds,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getStanding,\r\n    getplayers,\r\n    getvenue,\r\n    getMatches,\r\n    getLive,\r\n    getOdds,\r\n    getSingleMatchOdds\r\n})(Home);"]},"metadata":{},"sourceType":"module"}