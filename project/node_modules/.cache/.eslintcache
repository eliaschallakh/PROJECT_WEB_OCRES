[{"C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\index.js":"1","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\App.js":"2","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\store.js":"3","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Header.js":"4","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Admin.js":"5","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\reducer.js":"6","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Home.js":"7","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Graph.js":"8","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\PointsTable.js":"9","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Venues.js":"10","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\LiveScore.js":"11","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Redux\\action.js":"12","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Redux\\reducer.js":"13"},{"size":334,"mtime":1638722016708,"results":"14","hashOfConfig":"15"},{"size":586,"mtime":1638722953644,"results":"16","hashOfConfig":"15"},{"size":413,"mtime":1638017358000,"results":"17","hashOfConfig":"15"},{"size":1313,"mtime":1638727491108,"results":"18","hashOfConfig":"15"},{"size":7378,"mtime":1638737341681,"results":"19","hashOfConfig":"15"},{"size":137,"mtime":1638017522000,"results":"20","hashOfConfig":"15"},{"size":3829,"mtime":1638727430893,"results":"21","hashOfConfig":"15"},{"size":1561,"mtime":1638914444573,"results":"22","hashOfConfig":"15"},{"size":24586,"mtime":1638912836069,"results":"23","hashOfConfig":"15"},{"size":2487,"mtime":1638175841000,"results":"24","hashOfConfig":"15"},{"size":11057,"mtime":1638176630000,"results":"25","hashOfConfig":"15"},{"size":3571,"mtime":1638107276000,"results":"26","hashOfConfig":"15"},{"size":1928,"mtime":1638117769000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"oxvkit",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"31"},"C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\index.js",["64"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  \n  <Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n",["65","66"],"C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\App.js",["67"],"import \"./App.css\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Admin from \"./Admin\";\n\nimport {BrowserRouter} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Header/>\n          <div className=\"App\">\n                  <Routes>\n                      <Route exact path=\"/\" element={ <Home />}/>\n                      <Route exact path=\"/Admin\" element={ <Admin />}/>\n                  </Routes>\n            </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\store.js",[],"C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Header.js",["68","69","70","71"],"import PointsTable from \"./PointsTable\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Header() {\r\n\r\n    return (\r\n        \r\n        <div className=\"livescore header\">\r\n            \r\n            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                <img src={'https://apiv2.apifootball.com/badges/logo_leagues/148_premier-league.png'}/>\r\n                <h3 style={{marginTop: 'auto', marginBottom: 'auto'}}>English Premier League</h3>\r\n              \r\n              <div style={{marginTop: 'auto', marginBottom: 'auto', paddingLeft:'55px'}}>\r\n                <Link to=\"/\">\r\n                             <button style={{marginRight:\"30px\"}} className=\"btn navbar-right float-right\" type=\"submit\">\r\n                                    Widgets\r\n                              </button>\r\n                </Link>\r\n                <Link to=\"/Admin\">\r\n                             <button style={{marginRight:\"30px\"}} className=\"btn navbar-right float-right\" type=\"submit\">\r\n                                    Admin\r\n                              </button>\r\n                </Link>\r\n                </div>\r\n            </div>\r\n                <div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Admin.js",["72","73","74","75","76","77"],"import PointsTable from \"./PointsTable\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport  {Table,Form} from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\nexport default function Admin() {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n     const [matchs, setMatchs] = useState([]);\r\n    const [description, setDescription] = useState([]);\r\n    const [date, setDate] = useState([]);\r\n    \r\n    \r\n    function inputUpdate(event) \r\n    {\r\n        setMatchs({[event.target.name]: event.target.value});\r\n        setDescription({[event.target.name]: event.target.value});\r\n        setDate({[event.target.name]: event.target.value});\r\n\r\n\r\n      };\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await Axios.get('http://localhost:5000/comments/', {  \r\n            });\r\n             setData(response.data);\r\n             console.log(response.data);\r\n            \r\n             var matchess=[];\r\n             var descriptionss=[];\r\n             var datess=[];\r\n          \r\n            for (var i=0; i<response.data.length; i++)\r\n            {\r\n                matchess.push((response.data[i].matchs));\r\n                descriptionss.push((response.data[i].description));\r\n\r\n                var today = new Date(response.data[i].date);\r\n                datess.push(today.toISOString().substring(0, 10));\r\n            }\r\n            \r\n                setMatchs(matchess);\r\n                setDescription(descriptionss);\r\n                setDate(datess);\r\n\r\n          };\r\n          fetchData();\r\n        }, []);\r\n\r\n       function updateComment(_id)\r\n       {\r\n        \r\n    \r\n        \r\n        const commentUpdate = async (_id,matchs,description,date) => {\r\n        \r\n            const response = await Axios.put('http://localhost:5000/comments/update', {  \r\n                matchs :matchs,\r\n                description : description,\r\n                date : date,\r\n            }\r\n\r\n            )\r\n          };\r\n\r\n        var matchs = document.getElementsByClassName(\"matchs\"+_id)[0].value;\r\n        var description = document.getElementsByClassName(\"description\"+_id)[0].value;\r\n        var date = document.getElementsByClassName(\"date\"+_id)[0].value;\r\n      \r\n        commentUpdate(_id,matchs,description,date);\r\n \r\n         window.location.reload(false);  \r\n\r\n\r\n       }\r\n\r\n       function deleteComment(_id)\r\n       {\r\n\r\n            const commentdelete = async (_id) => {\r\n            \r\n                const response = await Axios.delete(`http://localhost:5000/comments/delete/${_id}`)  \r\n                };\r\n                commentdelete(_id);\r\n                window.location.reload(false);  \r\n       }\r\n\r\n       function addComment()\r\n       {\r\n        var matchs = document.getElementsByClassName(\"matchs\")[0].value;\r\n        var description = document.getElementsByClassName(\"description\")[0].value;\r\n        var date = document.getElementsByClassName(\"date\")[0].value;\r\n\r\n        const commentAdd = async (matchs,description,date) => {\r\n        \r\n            const response = await Axios.post('http://localhost:5000/comments/add', {  \r\n                matchs : matchs,\r\n                description : description,\r\n                date : date,\r\n            }\r\n            )\r\n          };\r\n          commentAdd(matchs,description,date);\r\n          window.location.reload(false);  \r\n\r\n       }\r\n\r\n\r\n\r\n    if (data===undefined ||data.length===0)\r\n    {\r\n        \r\n        return (\r\n            <div className=\"livescore\">\r\n                             <div>\r\n                    <h3 style={{textAlign: \"center\"}} >Live comments !</h3>\r\n                  \r\n                  <div style={{textAlign: \"center\"}} style={{marginBottom: \"100%\"}}className=\"commentWrapper\">\r\n                        \r\n                        <div  class=\"flex messages\">\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Matchs</th>\r\n                                        <th>Description</th>\r\n                                        <th>Date</th>\r\n                                        <th>Edit</th>\r\n    \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                </tbody>\r\n                            </Table>\r\n                       \r\n    \r\n                        </div>\r\n                  </div>\r\n                  \r\n                  </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\nelse{\r\n    return (\r\n        <div className=\"livescore\">\r\n                         <div>\r\n                <h3 style={{textAlign: \"center\"}} >Live comments !</h3>\r\n              \r\n              <div style={{textAlign: \"center\"}} style={{marginBottom: \"100%\"}}className=\"commentWrapper\">\r\n                    \r\n                    <div  class=\"flex messages\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Matchs</th>\r\n                                    <th>Description</th>\r\n                                    <th>Date</th>\r\n                                    <th>Edit</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>  <Form.Control onChange={inputUpdate} className={\"matchs\"} type=\"text\"/></td>\r\n                                <td> <Form.Control onChange={inputUpdate}  className={\"description\"} type=\"text\" /></td>\r\n                                <td>  <Form.Control onChange={inputUpdate} className={\"date\"} type=\"date\" /></td>\r\n                                    <td>\r\n                                        <button onClick={() => addComment()} >add</button>\r\n                                    </td>\r\n                                </tr>                             \r\n                                {  \r\n                        data.map((comment, i) => (\r\n\r\n                               <tr>\r\n                                <td>  <Form.Control onChange={inputUpdate} value={matchs[i]}  name={\"matchs\"+i} className={\"matchs\"+comment._id} type=\"text\"/></td>\r\n                                <td> <Form.Control onChange={inputUpdate} value={description[i]} className={\"description\"+comment._id} type=\"text\" name={\"description\"+i} /></td>\r\n                                <td>  <Form.Control onChange={inputUpdate} value={date[i]} className={\"date\"+comment._id} type=\"date\" name={\"date\"+i} /></td>\r\n                                    <td>\r\n                                        <button  onClick={() => updateComment(comment._id)} >Update</button>\r\n                                        <button onClick={() => deleteComment(comment._id)}>Delete</button>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                                       ))\r\n\r\n                               \r\n                               }\r\n                            </tbody>\r\n                        </Table>\r\n                   \r\n\r\n                    </div>\r\n              </div>\r\n              \r\n              </div>\r\n        </div>\r\n    );\r\n                            }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\reducer.js",[],"C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Home.js",["78","79"],"import PointsTable from \"./PointsTable\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport Graph from \"./Graph\";\r\nimport Venues from \"./Venues\";\r\nimport LiveScore from \"./LiveScore\";\r\nimport {getStanding, getplayers, getvenue, getMatches, getLive, getOdds, getSingleMatchOdds} from \"./Redux/action\";\r\nimport {connect} from \"react-redux\";\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nfunction Home({\r\n                  getStanding,\r\n                  getplayers,\r\n                  getvenue,\r\n                  getMatches,\r\n                  getLive,\r\n                  getOdds,\r\n                  getSingleMatchOdds,\r\n                  topPlayers,\r\n                  ranking,\r\n                  venues,\r\n                  matches,\r\n                  live,\r\n                  all,\r\n                  preMatchOdds,\r\n                  inPlayOdds\r\n              }) {\r\n        \r\n   const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        getStanding();\r\n        getplayers();\r\n        getvenue();\r\n        getMatches();\r\n        getLive();\r\n        getOdds();\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await Axios.get('http://localhost:5000/comments/', {  \r\n            })\r\n            .catch((error) => console.log(error.resp));\r\n             setData(response);\r\n          };\r\n\r\n          fetchData();\r\n          console.log(data);\r\n\r\n    }, []);\r\n        console.log(data);\r\n        \r\n        if (data===undefined ||data.length===0)\r\n        {\r\n            return <div>....</div>;\r\n\r\n        }\r\n   else{\r\n\r\n\r\n        return (\r\n        <div className=\"livescore\">\r\n         \r\n            <LiveScore liveScore={live} preMatchOdds={preMatchOdds} inPlayOdds={inPlayOdds}\r\n                       getSingleMatchOdds={getSingleMatchOdds}/>\r\n            <Graph topPlayers={topPlayers}/>\r\n            \r\n             <div>\r\n                <h3 style={{textAlign: \"center\"}} >Live comments !</h3>\r\n              \r\n              <div style={{textAlign: \"center\"}} className=\"commentWrapper\">\r\n                    \r\n                    <div  class=\"flex messages\">\r\n                            \r\n                        {\r\n                        \r\n                        data.data.map((comment, i) => (\r\n                            <div className=\"messageContent\">\r\n                                <div style={{textAlign: \"left\"}} className='match'>Match : {comment.matchs}</div>\r\n                                <div style={{textAlign: \"left\"}} className='description'>\r\n                                     {comment.description}\r\n                                </div>\r\n                                <div style={{textAlign: \"right\"}}>{comment.date.toString().slice(0, 10)}</div>\r\n                            </div>\r\n                                       ))\r\n                       }\r\n\r\n                    </div>\r\n              </div>\r\n              \r\n              </div>\r\n\r\n            <div>\r\n                <PointsTable ranking={ranking} matches={matches} allMatches={all}\r\n                             getSingleMatchOdds={getSingleMatchOdds} preMatchOdds={preMatchOdds}\r\n                             inPlayOdds={inPlayOdds} venues={venues}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ranking: state.football.listStandings,\r\n    topPlayers: state.football.listTopPlayers,\r\n    venues: state.football.listVenues,\r\n    matches: state.football.listMatches,\r\n    live: state.football.listLiveMatches,\r\n    all: state.football.ListAllMatches,\r\n    preMatchOdds: state.football.prematchOdds,\r\n    inPlayOdds: state.football.inPlayOdds,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getStanding,\r\n    getplayers,\r\n    getvenue,\r\n    getMatches,\r\n    getLive,\r\n    getOdds,\r\n    getSingleMatchOdds\r\n})(Home);","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Graph.js",["80"],"C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\PointsTable.js",["81","82","83","84","85","86","87","88","89","90"],"C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Venues.js",["91"],"import React, {useState} from 'react';\r\nimport down from \"./down.png\";\r\nimport up from \"./up-arrow.png\";\r\n\r\nfunction Venues(props) {\r\n    let venue = {};\r\n    const [show, setShow] = useState(false);\r\n    if (props.venues !== null && props.venues !== undefined) {\r\n        venue = props.venues.data.data.slice(0, 23);\r\n    }\r\n    if (show) {\r\n        venue = props.venues.data.data\r\n    }\r\n    return (\r\n        <div className=\"contpoints\">\r\n            <h1>Venues</h1>\r\n            <table className=\"pointstable\">\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>City</th>\r\n                    <th>Capacity</th>\r\n                </tr>\r\n                {Object.values(venue).map((item, ind) => {\r\n                    return (\r\n                        <>{\r\n                            item.capacity > 19999 && ind !== 0 ?\r\n                                <tr>\r\n                                    <th>{item.name}</th>\r\n                                    <th>{item.city}</th>\r\n                                    <th>{item.capacity}</th>\r\n                                </tr> : \"\"\r\n                        }\r\n                        </>\r\n                    )\r\n                })}\r\n            </table>\r\n            {!show ?\r\n\r\n                <img\r\n                    src={down}\r\n                    onClick={() => {\r\n                        setShow(true)\r\n                    }}\r\n                    style={{\r\n                    cursor: 'pointer',\r\n                    maxWidth: '50px',\r\n                    position: 'relative',\r\n                    left: '50%',\r\n                    top: '-2%',\r\n                    padding: '2%',\r\n                    backgroundColor: '#3F1052',\r\n                    color: '#fff',\r\n                    borderRadius: '50%'\r\n                }}/>\r\n                :\r\n                <img\r\n                    src={up}\r\n                    alt=\"Avatar\"\r\n                    onClick={() => {\r\n                    setShow(false)\r\n                }}\r\n                    style={{\r\n                    cursor: 'pointer',\r\n                    maxWidth: '50px',\r\n                    position: 'relative',\r\n                    left: '50%',\r\n                    padding: '2%',\r\n                    top: '-1%',\r\n                    backgroundColor: '#3F1052',\r\n                    color: '#fff',\r\n                    borderRadius: '50%'\r\n                }}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Venues;","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\LiveScore.js",["92","93","94","95","96","97"],"import {Col, Container, Modal, Row} from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport React, {useState} from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {Carousel} from '@trendyol-js/react-carousel';\r\n\r\nfunction LiveScore(props) {\r\n    let live = {};\r\n    if (props.liveScore !== null) {\r\n        live = props.liveScore.data.data;\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [matchData, setmatchData] = useState({});\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (item) => {\r\n        setShow(true)\r\n        setmatchData(item)\r\n    };\r\n\r\n    let inPlayOdds = {};\r\n    if (props.inPlayOdds !== null) {\r\n        inPlayOdds = props.inPlayOdds;\r\n    }\r\n\r\n    if (Object.keys(matchData).length !== 0 && !inPlayOdds.hasOwnProperty('data')) {\r\n        props.getSingleMatchOdds('', matchData.match_id);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\" style={{flexDirection: 'row', flexWrap: 'wrap'}}>\r\n            {/*<h3>Live Scorecard</h3>*/}\r\n            {Object.keys(live).length !== 0 && live.map((item) => {\r\n                return (\r\n                    <div onClick={() => {\r\n                        handleShow(item)\r\n                    }}>\r\n                        {item.status_code === 1 || item.status_code === 11 || item.status_code === 12 || item.status_code === 13 || item.status_code === 14 ? (\r\n\r\n                            <Container className=\"cont\">\r\n                                <Row>\r\n                                    <Col style={{textAlign: 'center'}}><img src={item.home_team.logo}\r\n                                                                            style={{width: '20px'}}/> {item.home_team.short_code}\r\n                                    </Col>\r\n                                    <Col style={{textAlign: 'center'}}><img src={item.away_team.logo}\r\n                                                                            style={{width: '20px'}}/> {item.away_team.short_code}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{textAlign: 'center'}}>{item.stats.home_score}</Col>\r\n                                    <Col style={{textAlign: 'center'}}> {item.stats.away_score}</Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col style={{textAlign: 'center'}}>Time: {item.minute}</Col>\r\n                                    <Col style={{textAlign: 'center'}}>Status: In-Progrss</Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col style={{textAlign: 'center'}}>\r\n                                        Venue: {item.hasOwnProperty(\"venue\") ? item.venue.name : \"NA\"}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n                );\r\n            })}\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {matchData.country_name} {matchData.league_name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col style={{textAlign: 'center'}}>\r\n                            <img\r\n                                src={matchData.hasOwnProperty('home_team') ? matchData.home_team.logo : ''}\r\n                                style={{width: '20px'}}/> {\r\n                            matchData.hasOwnProperty('home_team') ? matchData.home_team.name : ''}\r\n                        </Col>\r\n                        <Col style={{textAlign: 'center'}}><img\r\n                            src={matchData.hasOwnProperty('away_team') ? matchData.away_team.logo : ''}\r\n                            style={{width: '20px'}}/> {\r\n                            matchData.hasOwnProperty('away_team') ? matchData.away_team.name : ''}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col\r\n                            style={{textAlign: 'center'}}>{matchData.hasOwnProperty('stats') ? matchData.stats.home_score : \"\"}</Col>\r\n                        <Col\r\n                            style={{textAlign: 'center'}}>{matchData.hasOwnProperty('stats') ? matchData.stats.away_score : \"\"}</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col style={{textAlign: 'center'}}>{matchData.match_status}</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col style={{textAlign: 'center'}}>\r\n                            Match is being played at Venue:\r\n                            {matchData.hasOwnProperty('venue') ? matchData.venue.name : \"\"}</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {inPlayOdds.hasOwnProperty('data') && Object.keys(inPlayOdds.data).length === 0 ?\r\n                            <Col style={{textAlign: 'center', marginTop: '5%'}}>In Match Odds Not\r\n                                Available </Col> :\r\n                            <div>\r\n                                <h3 style={{textAlign: 'center'}}>In Match Odds Available </h3>\r\n                                <div style={{display: 'flex', justifyContent: \"space-around\", flexFlow: 'wrap'}}>\r\n                                    <div>\r\n                                        {inPlayOdds.hasOwnProperty('data') ?\r\n                                            <h3 style={{textAlign: 'center'}}>{Object.keys(inPlayOdds.data)[0]}</h3> : ''}\r\n                                        <table className=\"pointstable\">\r\n                                            <tr>\r\n                                                <th>BookMaker Name</th>\r\n                                                <th>Home</th>\r\n                                                <th>Away</th>\r\n                                                <th>Draw</th>\r\n                                                <th>Handicap</th>\r\n                                            </tr>\r\n                                            {inPlayOdds.hasOwnProperty('data') && Object.values(inPlayOdds.data)[0].bookmakers.map((item, ind) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <th>{item.bookmaker_name}</th>\r\n                                                        <th>{item.odds_data.home}</th>\r\n                                                        <th> {item.odds_data.away}</th>\r\n                                                        <th> {item.odds_data.draw}</th>\r\n                                                        <th> {item.odds_data.handicap}</th>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </table>\r\n                                    </div>\r\n                                    <div>\r\n                                        {inPlayOdds.hasOwnProperty('data') ?\r\n                                            <h3 style={{textAlign: 'center'}}>{Object.keys(inPlayOdds.data)[1]}</h3>\r\n                                            : ''}\r\n\r\n                                        <table className=\"pointstable\">\r\n                                            <tr>\r\n                                                <th>BookMaker Name</th>\r\n                                                <th>Home</th>\r\n                                                <th>Away</th>\r\n                                                <th>Draw</th>\r\n                                                <th>Handicap</th>\r\n                                            </tr>\r\n                                            {inPlayOdds.hasOwnProperty('data') && Object.values(inPlayOdds.data)[1].bookmakers.map((item, ind) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <th>{item.bookmaker_name}</th>\r\n                                                        <th>{item.odds_data.home}</th>\r\n                                                        <th> {item.odds_data.away}</th>\r\n                                                        <th> {item.odds_data.draw}</th>\r\n                                                        <th> {item.odds_data.handicap}</th>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </table>\r\n                                    </div>\r\n                                    <div>\r\n                                        {inPlayOdds.hasOwnProperty('data') ?\r\n                                            <h3 style={{textAlign: 'center'}}>{Object.keys(inPlayOdds.data)[2]}</h3>\r\n                                            : ''}\r\n                                        <table className=\"pointstable\">\r\n                                            <tr>\r\n                                                <th>BookMaker Name</th>\r\n                                                <th>Home</th>\r\n                                                <th>Away</th>\r\n                                                <th>Draw</th>\r\n                                                <th>Handicap</th>\r\n                                            </tr>\r\n                                            {inPlayOdds.hasOwnProperty('data') && Object.values(inPlayOdds.data)[2].bookmakers.map((item, ind) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <th>{item.bookmaker_name}</th>\r\n                                                        <th>{item.odds_data.home}</th>\r\n                                                        <th> {item.odds_data.away}</th>\r\n                                                        <th> {item.odds_data.draw}</th>\r\n                                                        <th> {item.odds_data.handicap}</th>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </Row>\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiveScore;\r\n","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Redux\\action.js",["98"],"import axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nexport const getStanding = () => (dispatch) => {\r\n    axios.get(\"http://localhost:5000/football/ranking\")\r\n        .then((res) => {\r\n                dispatch({\r\n                    type: \"listStanding\",\r\n                    payload: res\r\n                });\r\n            }\r\n        )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: \"UnAuthorized\"\r\n            });\r\n        });\r\n};\r\n\r\nexport const getplayers = () => (dispatch) => {\r\n    axios.get(\"http://localhost:5000/football/topscorrer\")\r\n        .then((res) => {\r\n                dispatch({\r\n                    type: \"topscorers\",\r\n                    payload: res\r\n                });\r\n            }\r\n        )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: \"UnAuthorized\"\r\n            });\r\n        });\r\n};\r\n\r\nexport const getvenue = () => (dispatch) => {\r\n\r\n    axios.get(\"http://localhost:5000/football/venues\")\r\n        .then((res) => {\r\n                dispatch({\r\n                    type: \"venues\",\r\n                    payload: res\r\n                });\r\n            }\r\n        )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: \"UnAuthorized\"\r\n            });\r\n        });\r\n};\r\n\r\nexport const getMatches = () => (dispatch) => {\r\n\r\n    axios.get(\"http://localhost:5000/football/matches\")\r\n        .then((res) => {\r\n                dispatch({\r\n                    type: \"matches\",\r\n                    payload: res\r\n                });\r\n            }\r\n        )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: \"UnAuthorized\"\r\n            });\r\n        });\r\n};\r\n\r\nexport const getLive = () => (dispatch) => {\r\n\r\n    axios.get(\"http://localhost:5000/football/matches/live\")\r\n        .then((res) => {\r\n                dispatch({\r\n                    type: \"live\",\r\n                    payload: res\r\n                });\r\n            }\r\n        )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: \"UnAuthorized\"\r\n            });\r\n        });\r\n};\r\n\r\nexport const getOdds = () => (dispatch) => {\r\n    axios.get(\"http://localhost:5000/football/matches/all\")\r\n        .then((res) => {\r\n                dispatch({\r\n                    type: \"All\",\r\n                    payload: res\r\n                });\r\n            }\r\n        )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: \"UnAuthorized\"\r\n            });\r\n        });\r\n}\r\n\r\nexport const getSingleMatchOdds = (all, match) => async (dispatch) => {\r\n    if (all === \"\") {\r\n        const inplay = await odds(match, 'inplay')\r\n        dispatch({\r\n            type: \"singleOdd\",\r\n            payload: {inplay}\r\n        });\r\n    } else {\r\n        let allMatches = all;\r\n        let singleMatch = match;\r\n        let matchID = '';\r\n        await allMatches.map(item => {\r\n            if (item.match_start.includes(singleMatch.match_date) &&\r\n                item.home_team.name.includes(singleMatch.match_hometeam_name) &&\r\n                item.away_team.name.includes(singleMatch.match_awayteam_name)) {\r\n                matchID = item.match_id\r\n            }\r\n        })\r\n\r\n        const prematch = await odds(matchID, 'prematch')\r\n        const inplay = await odds(matchID, 'inplay')\r\n        dispatch({\r\n            type: \"singleOdd\",\r\n            payload: {prematch, inplay}\r\n        });\r\n    }\r\n\r\n}\r\n\r\nasync function odds(id, type) {\r\n    const res = await axios.get(`http://localhost:5000/football/odds/${id}/${type}`);\r\n    return res;\r\n}","C:\\Users\\elias\\Documents\\Project foot web\\project\\src\\Redux\\reducer.js",["99"],"const initialState = {\r\n    listStandings: null,\r\n    listTopPlayers: null,\r\n    listVenues: null,\r\n    listMatches: null,\r\n    listLiveMatches: null,\r\n    ListAllMatches: null,\r\n    prematchOdds: null,\r\n    inPlayOdds: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"listStanding\":\r\n            return {\r\n                ...state,\r\n                listStandings: action.payload,\r\n            };\r\n\r\n        case \"topscorers\":\r\n            return {\r\n                ...state,\r\n                listTopPlayers: action.payload,\r\n            };\r\n\r\n        case \"venues\":\r\n            return {\r\n                ...state,\r\n                listVenues: action.payload,\r\n            };\r\n\r\n        case \"matches\":\r\n            let matchesByDate = {}\r\n            action.payload.data.forEach((x)=>{\r\n                if(matchesByDate.hasOwnProperty(x.match_date)){\r\n                    matchesByDate[x.match_date].push(x)\r\n                }\r\n                else{\r\n                    matchesByDate[x.match_date] = []\r\n                    matchesByDate[x.match_date].push(x)\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                listMatches: matchesByDate,\r\n            };\r\n        case \"live\":\r\n            return {\r\n                ...state,\r\n                listLiveMatches: action.payload,\r\n            };\r\n\r\n        case \"All\":\r\n            return {\r\n                ...state,\r\n                ListAllMatches: action.payload\r\n            }\r\n        case \"singleOdd\":\r\n            let prematch = action.payload.hasOwnProperty('prematch') ? action.payload.prematch.data : {};\r\n            let inplay = action.payload.inplay.data;\r\n            return {\r\n                ...state,\r\n                prematchOdds: prematch,\r\n                inPlayOdds: inplay,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}",{"ruleId":"100","severity":1,"message":"101","line":7,"column":9,"nodeType":"102","messageId":"103","endLine":7,"endColumn":22},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"108","line":3,"column":27,"nodeType":"102","messageId":"103","endLine":3,"endColumn":33},{"ruleId":"100","severity":1,"message":"109","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":19},{"ruleId":"100","severity":1,"message":"110","line":2,"column":16,"nodeType":"102","messageId":"103","endLine":2,"endColumn":24},{"ruleId":"100","severity":1,"message":"111","line":2,"column":26,"nodeType":"102","messageId":"103","endLine":2,"endColumn":35},{"ruleId":"112","severity":1,"message":"113","line":15,"column":17,"nodeType":"114","endLine":15,"endColumn":104},{"ruleId":"100","severity":1,"message":"109","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":19},{"ruleId":"100","severity":1,"message":"115","line":62,"column":19,"nodeType":"102","messageId":"103","endLine":62,"endColumn":27},{"ruleId":"100","severity":1,"message":"115","line":87,"column":23,"nodeType":"102","messageId":"103","endLine":87,"endColumn":31},{"ruleId":"100","severity":1,"message":"115","line":101,"column":19,"nodeType":"102","messageId":"103","endLine":101,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":123,"column":54,"nodeType":"118","messageId":"119","endLine":123,"endColumn":84},{"ruleId":"116","severity":1,"message":"117","line":155,"column":50,"nodeType":"118","messageId":"119","endLine":155,"endColumn":80},{"ruleId":"100","severity":1,"message":"120","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":53,"column":8,"nodeType":"123","endLine":53,"endColumn":10,"suggestions":"124"},{"ruleId":"100","severity":1,"message":"125","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":79,"column":47,"nodeType":"128","messageId":"129","endLine":79,"endColumn":49},{"ruleId":"126","severity":1,"message":"127","line":92,"column":47,"nodeType":"128","messageId":"129","endLine":92,"endColumn":49},{"ruleId":"112","severity":1,"message":"113","line":131,"column":41,"nodeType":"114","endLine":131,"endColumn":93},{"ruleId":"112","severity":1,"message":"113","line":159,"column":49,"nodeType":"114","endLine":159,"endColumn":106},{"ruleId":"112","severity":1,"message":"113","line":166,"column":49,"nodeType":"114","endLine":168,"endColumn":78},{"ruleId":"112","severity":1,"message":"113","line":229,"column":29,"nodeType":"114","endLine":229,"endColumn":116},{"ruleId":"112","severity":1,"message":"113","line":237,"column":29,"nodeType":"114","endLine":239,"endColumn":58},{"ruleId":"112","severity":1,"message":"113","line":244,"column":60,"nodeType":"114","endLine":246,"endColumn":54},{"ruleId":"112","severity":1,"message":"113","line":296,"column":45,"nodeType":"114","endLine":298,"endColumn":70},{"ruleId":"112","severity":1,"message":"113","line":300,"column":45,"nodeType":"114","endLine":302,"endColumn":70},{"ruleId":"112","severity":1,"message":"113","line":39,"column":17,"nodeType":"114","endLine":54,"endColumn":21},{"ruleId":"100","severity":1,"message":"130","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"131","line":5,"column":9,"nodeType":"102","messageId":"103","endLine":5,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":44,"column":72,"nodeType":"114","endLine":45,"endColumn":102},{"ruleId":"112","severity":1,"message":"113","line":47,"column":72,"nodeType":"114","endLine":48,"endColumn":102},{"ruleId":"112","severity":1,"message":"113","line":83,"column":29,"nodeType":"114","endLine":85,"endColumn":58},{"ruleId":"112","severity":1,"message":"113","line":88,"column":60,"nodeType":"114","endLine":90,"endColumn":54},{"ruleId":"126","severity":1,"message":"127","line":116,"column":35,"nodeType":"128","messageId":"129","endLine":116,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":12,"column":1,"nodeType":"134","endLine":69,"endColumn":2},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["135"],"no-negated-in-lhs",["136"],"'Router' is defined but never used.","'PointsTable' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'response' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Venues' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data', 'getLive', 'getMatches', 'getOdds', 'getStanding', 'getplayers', and 'getvenue'. Either include them or remove the dependency array. If 'getStanding' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["137"],"'ApexCharts' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ReactDOM' is defined but never used.","'Carousel' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [data, getLive, getMatches, getOdds, getStanding, getplayers, getvenue]",{"range":"140","text":"141"},[1409,1411],"[data, getLive, getMatches, getOdds, getStanding, getplayers, getvenue]"]